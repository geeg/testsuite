# TestSuite Name : km_default_1abalone
# Test kmeans Lloyd heuristic with default fn_dist, agg_centroid, max_num_iterations and min_frac_reassigned
# Start TestSuite ==========
km_default_1abalone_0_0

# TestSuite Name : km_default_2movementlibras
# Test kmeans Lloyd heuristic with default fn_dist, agg_centroid, max_num_iterations and min_frac_reassigned
# Start TestSuite ==========
km_default_2movementlibras_0_0

# TestSuite Name : km_default_3uscensus1990
# Test kmeans Lloyd heuristic with default fn_dist, agg_centroid, max_num_iterations and min_frac_reassigned
# Start TestSuite ==========
km_default_3uscensus1990_0_0

# TestSuite Name : km_default_4watertreatment
# Test kmeans Lloyd heuristic with default fn_dist, agg_centroid, max_num_iterations and min_frac_reassigned
# Start TestSuite ==========
km_default_4watertreatment_0_0

# TestSuite Name : km_default_5wine
# Test kmeans Lloyd heuristic with default fn_dist, agg_centroid, max_num_iterations and min_frac_reassigned
# Start TestSuite ==========
km_default_5wine_0_0

# TestSuite Name : km_default_6winequalityred
# Test kmeans Lloyd heuristic with default fn_dist, agg_centroid, max_num_iterations and min_frac_reassigned
# Start TestSuite ==========
km_default_6winequalityred_0_0

# TestSuite Name : km_initialcentroids
# Test kmeans Lloyd heuristic with different initial_centroids
# Start TestSuite ==========
km_initialcentroids_0_0
km_initialcentroids_0_1
km_initialcentroids_0_2
km_initialcentroids_0_3
km_initialcentroids_0_4
km_initialcentroids_0_5

# TestSuite Name : km_fndist_1distnorm1
# Test kmeans Lloyd heuristic with different fn_dist
# Start TestSuite ==========
km_fndist_1distnorm1_0_0

# TestSuite Name : km_fndist_2distangle
# Test kmeans Lloyd heuristic with different fn_dist
# Start TestSuite ==========
km_fndist_2distangle_0_0

# TestSuite Name : km_fndist_3disttanimoto
# Test kmeans Lloyd heuristic with different fn_dist
# Start TestSuite ==========
km_fndist_3disttanimoto_0_0

# TestSuite Name : km_fndist_4distuserdefined
# Test kmeans Lloyd heuristic with different fn_dist
# Start TestSuite ==========
km_fndist_4distuserdefined_0_0

# TestSuite Name : km_aggcentroid_normalizedavg
# Test kmeans Lloyd heuristic with different agg_centroid
# Start TestSuite ==========
km_aggcentroid_normalizedavg_0_0

# TestSuite Name : km_aggcentroid_userdefined
# Test kmeans Lloyd heuristic with user defined agg_centroid
# Start TestSuite ==========
km_aggcentroid_userdefined_0_0

# TestSuite Name : km_maxnumiterations
# Test kmeans Lloyd heuristic with different max_num_iterations
# Start TestSuite ==========
km_maxnumiterations_0_0
km_maxnumiterations_0_1
km_maxnumiterations_0_2
km_maxnumiterations_0_3
km_maxnumiterations_0_4

# TestSuite Name : km_minfracreassigned
# Test kmeans Lloyd heuristic with different min_frac_reassigned
# Start TestSuite ==========
km_minfracreassigned_0_0
km_minfracreassigned_0_1
km_minfracreassigned_0_2
km_minfracreassigned_0_3
km_minfracreassigned_0_4
km_minfracreassigned_0_5
km_minfracreassigned_0_6
km_minfracreassigned_0_7

# TestSuite Name : km_ctas
# Test kmeans Lloyd heuristic with create table as
# Start TestSuite ==========
km_ctas_0_0

# TestSuite Name : km_svec
# Test kmeans Lloyd heuristic with sparse vector as input
# Start TestSuite ==========
km_svec_0_0

# TestSuite Name : km_int
# Test kmeans Lloyd heuristic with int as input
# Start TestSuite ==========
km_int_0_0

# TestSuite Name : km_nonfinite_1artificaldata
# Test kmeans Lloyd heuristic with nonfinite input
# Start TestSuite ==========
km_nonfinite_1artificaldata_0_0

# TestSuite Name : km_nonfinite_2water_treatment_noninfinite
# Test kmeans Lloyd heuristic with nonfinite input
# Start TestSuite ==========
km_nonfinite_2water_treatment_noninfinite_0_0

# TestSuite Name : km_negative_nonfinite
# Test kmeans Lloyd heuristic with invalid nonfinite input
# Start TestSuite ==========
km_negative_nonfinite_0_0
km_negative_nonfinite_0_1

# TestSuite Name : km_negative_maxiter
# Test kmeans Lloyd heuristic with invalid maximum iteration number
# Start TestSuite ==========
km_negative_maxiter_0_0

# TestSuite Name : km_negative_minfrac
# Test kmeans Lloyd heuristic with invalid minimum fraction of reassigned centroids
# Start TestSuite ==========
km_negative_minfrac_0_0
km_negative_minfrac_0_1

# TestSuite Name : km_perf_norm1_0
# Test performance of kmeans Lloyd heuristic with norm1 distance function
# Start TestSuite ==========
km_perf_norm1_0_0_0

# TestSuite Name : km_perf_norm1_1
# Test performance of kmeans Lloyd heuristic with norm1 distance function
# Start TestSuite ==========
km_perf_norm1_1_0_0

# TestSuite Name : km_perf_norm1_2
# Test performance of kmeans Lloyd heuristic with norm1 distance function
# Start TestSuite ==========
km_perf_norm1_2_0_0

# TestSuite Name : km_perf_norm1_3
# Test performance of kmeans Lloyd heuristic with norm1 distance function
# Start TestSuite ==========
km_perf_norm1_3_0_0

# TestSuite Name : km_perf_norm1_4
# Test performance of kmeans Lloyd heuristic with norm1 distance function
# Start TestSuite ==========
km_perf_norm1_4_0_0

# TestSuite Name : km_perf_norm1_5
# Test performance of kmeans Lloyd heuristic with norm1 distance function
# Start TestSuite ==========
km_perf_norm1_5_0_0

# TestSuite Name : km_perf_norm1_6
# Test performance of kmeans Lloyd heuristic with norm1 distance function
# Start TestSuite ==========
km_perf_norm1_6_0_0

# TestSuite Name : km_perf_norm1_7
# Test performance of kmeans Lloyd heuristic with norm1 distance function
# Start TestSuite ==========
km_perf_norm1_7_0_0

# TestSuite Name : km_perf_norm1_8
# Test performance of kmeans Lloyd heuristic with norm1 distance function
# Start TestSuite ==========
km_perf_norm1_8_0_0

# TestSuite Name : km_perf_norm1_9
# Test performance of kmeans Lloyd heuristic with norm1 distance function
# Start TestSuite ==========
km_perf_norm1_9_0_0

# TestSuite Name : km_perf_norm1_10
# Test performance of kmeans Lloyd heuristic with norm1 distance function
# Start TestSuite ==========
km_perf_norm1_10_0_0

# TestSuite Name : km_perf_norm2_0
# Test performance of kmeans Lloyd heuristic with norm2 distance function
# Start TestSuite ==========
km_perf_norm2_0_0_0

# TestSuite Name : km_perf_norm2_1
# Test performance of kmeans Lloyd heuristic with norm2 distance function
# Start TestSuite ==========
km_perf_norm2_1_0_0

# TestSuite Name : km_perf_norm2_2
# Test performance of kmeans Lloyd heuristic with norm2 distance function
# Start TestSuite ==========
km_perf_norm2_2_0_0

# TestSuite Name : km_perf_norm2_3
# Test performance of kmeans Lloyd heuristic with norm2 distance function
# Start TestSuite ==========
km_perf_norm2_3_0_0

# TestSuite Name : km_perf_norm2_4
# Test performance of kmeans Lloyd heuristic with norm2 distance function
# Start TestSuite ==========
km_perf_norm2_4_0_0

# TestSuite Name : km_perf_norm2_5
# Test performance of kmeans Lloyd heuristic with norm2 distance function
# Start TestSuite ==========
km_perf_norm2_5_0_0

# TestSuite Name : km_perf_norm2_6
# Test performance of kmeans Lloyd heuristic with norm2 distance function
# Start TestSuite ==========
km_perf_norm2_6_0_0

# TestSuite Name : km_perf_norm2_7
# Test performance of kmeans Lloyd heuristic with norm2 distance function
# Start TestSuite ==========
km_perf_norm2_7_0_0

# TestSuite Name : km_perf_norm2_8
# Test performance of kmeans Lloyd heuristic with norm2 distance function
# Start TestSuite ==========
km_perf_norm2_8_0_0

# TestSuite Name : km_perf_norm2_9
# Test performance of kmeans Lloyd heuristic with norm2 distance function
# Start TestSuite ==========
km_perf_norm2_9_0_0

# TestSuite Name : km_perf_norm2_10
# Test performance of kmeans Lloyd heuristic with norm2 distance function
# Start TestSuite ==========
km_perf_norm2_10_0_0

# TestSuite Name : km_perf_angle_0
# Test performance of kmeans Lloyd heuristic with angle distance function
# Start TestSuite ==========
km_perf_angle_0_0_0

# TestSuite Name : km_perf_angle_1
# Test performance of kmeans Lloyd heuristic with angle distance function
# Start TestSuite ==========
km_perf_angle_1_0_0

# TestSuite Name : km_perf_angle_2
# Test performance of kmeans Lloyd heuristic with angle distance function
# Start TestSuite ==========
km_perf_angle_2_0_0

# TestSuite Name : km_perf_angle_3
# Test performance of kmeans Lloyd heuristic with angle distance function
# Start TestSuite ==========
km_perf_angle_3_0_0

# TestSuite Name : km_perf_angle_4
# Test performance of kmeans Lloyd heuristic with angle distance function
# Start TestSuite ==========
km_perf_angle_4_0_0

# TestSuite Name : km_perf_angle_5
# Test performance of kmeans Lloyd heuristic with angle distance function
# Start TestSuite ==========
km_perf_angle_5_0_0

# TestSuite Name : km_perf_angle_6
# Test performance of kmeans Lloyd heuristic with angle distance function
# Start TestSuite ==========
km_perf_angle_6_0_0

# TestSuite Name : km_perf_angle_7
# Test performance of kmeans Lloyd heuristic with angle distance function
# Start TestSuite ==========
km_perf_angle_7_0_0

# TestSuite Name : km_perf_angle_8
# Test performance of kmeans Lloyd heuristic with angle distance function
# Start TestSuite ==========
km_perf_angle_8_0_0

# TestSuite Name : km_perf_angle_9
# Test performance of kmeans Lloyd heuristic with angle distance function
# Start TestSuite ==========
km_perf_angle_9_0_0

# TestSuite Name : km_perf_angle_10
# Test performance of kmeans Lloyd heuristic with angle distance function
# Start TestSuite ==========
km_perf_angle_10_0_0

# TestSuite Name : km_perf_tanimoto_0
# Test performance of kmeans Lloyd heuristic with tanimoto distance function
# Start TestSuite ==========
km_perf_tanimoto_0_0_0

# TestSuite Name : km_perf_tanimoto_1
# Test performance of kmeans Lloyd heuristic with tanimoto distance function
# Start TestSuite ==========
km_perf_tanimoto_1_0_0

# TestSuite Name : km_perf_tanimoto_2
# Test performance of kmeans Lloyd heuristic with tanimoto distance function
# Start TestSuite ==========
km_perf_tanimoto_2_0_0

# TestSuite Name : km_perf_tanimoto_3
# Test performance of kmeans Lloyd heuristic with tanimoto distance function
# Start TestSuite ==========
km_perf_tanimoto_3_0_0

# TestSuite Name : km_perf_tanimoto_4
# Test performance of kmeans Lloyd heuristic with tanimoto distance function
# Start TestSuite ==========
km_perf_tanimoto_4_0_0

# TestSuite Name : km_perf_tanimoto_5
# Test performance of kmeans Lloyd heuristic with tanimoto distance function
# Start TestSuite ==========
km_perf_tanimoto_5_0_0

# TestSuite Name : km_perf_tanimoto_6
# Test performance of kmeans Lloyd heuristic with tanimoto distance function
# Start TestSuite ==========
km_perf_tanimoto_6_0_0

# TestSuite Name : km_perf_tanimoto_7
# Test performance of kmeans Lloyd heuristic with tanimoto distance function
# Start TestSuite ==========
km_perf_tanimoto_7_0_0

# TestSuite Name : km_perf_tanimoto_8
# Test performance of kmeans Lloyd heuristic with tanimoto distance function
# Start TestSuite ==========
km_perf_tanimoto_8_0_0

# TestSuite Name : km_perf_tanimoto_9
# Test performance of kmeans Lloyd heuristic with tanimoto distance function
# Start TestSuite ==========
km_perf_tanimoto_9_0_0

# TestSuite Name : km_perf_tanimoto_10
# Test performance of kmeans Lloyd heuristic with tanimoto distance function
# Start TestSuite ==========
km_perf_tanimoto_10_0_0

# TestSuite Name : km_pp_default_1abalone
# Test kmeans plusplus with default fn_dist, agg_centroid, max_num_iterations and min_frac_reassigned
# Start TestSuite ==========
km_pp_default_1abalone_0_0

# TestSuite Name : km_pp_default_2movementlibras
# Test kmeans plusplus with default fn_dist, agg_centroid, max_num_iterations and min_frac_reassigned
# Start TestSuite ==========
km_pp_default_2movementlibras_0_0

# TestSuite Name : km_pp_default_3uscensus1990
# Test kmeans plusplus with default fn_dist, agg_centroid, max_num_iterations and min_frac_reassigned
# Start TestSuite ==========
km_pp_default_3uscensus1990_0_0

# TestSuite Name : km_pp_default_4watertreatment
# Test kmeans plusplus with default fn_dist, agg_centroid, max_num_iterations and min_frac_reassigned
# Start TestSuite ==========
km_pp_default_4watertreatment_0_0

# TestSuite Name : km_pp_default_5wine
# Test kmeans plusplus with default fn_dist, agg_centroid, max_num_iterations and min_frac_reassigned
# Start TestSuite ==========
km_pp_default_5wine_0_0

# TestSuite Name : km_pp_default_6winequalityred
# Test kmeans plusplus with default fn_dist, agg_centroid, max_num_iterations and min_frac_reassigned
# Start TestSuite ==========
km_pp_default_6winequalityred_0_0

# TestSuite Name : km_pp_k
# Test kmeans plusplus with different k
# Start TestSuite ==========
km_pp_k_0_0
km_pp_k_0_1
km_pp_k_0_2
km_pp_k_0_3
km_pp_k_0_4
km_pp_k_0_5

# TestSuite Name : km_pp_fndist_1distnorm1
# Test kmeans plusplus with different fn_dist
# Start TestSuite ==========
km_pp_fndist_1distnorm1_0_0

# TestSuite Name : km_pp_fndist_2distangle
# Test kmeans plusplus with different fn_dist
# Start TestSuite ==========
km_pp_fndist_2distangle_0_0

# TestSuite Name : km_pp_fndist_3disttanimoto
# Test kmeans plusplus with different fn_dist
# Start TestSuite ==========
km_pp_fndist_3disttanimoto_0_0

# TestSuite Name : km_pp_fndist_4distuserdefined
# Test kmeans plusplus with different fn_dist
# Start TestSuite ==========
km_pp_fndist_4distuserdefined_0_0

# TestSuite Name : km_pp_aggcentroid_normalizedavg
# Test kmeans plusplus with different agg_centroid
# Start TestSuite ==========
km_pp_aggcentroid_normalizedavg_0_0

# TestSuite Name : km_pp_aggcentroid_userdefined
# Test kmeans plusplus with user defined agg_centroid
# Start TestSuite ==========
km_pp_aggcentroid_userdefined_0_0

# TestSuite Name : km_pp_maxnumiterations
# Test kmeans plusplus with different max_num_iterations
# Start TestSuite ==========
km_pp_maxnumiterations_0_0
km_pp_maxnumiterations_0_1
km_pp_maxnumiterations_0_2
km_pp_maxnumiterations_0_3
km_pp_maxnumiterations_0_4

# TestSuite Name : km_pp_minfracreassigned
# Test kmeans plusplus with different min_frac_reassigned
# Start TestSuite ==========
km_pp_minfracreassigned_0_0
km_pp_minfracreassigned_0_1
km_pp_minfracreassigned_0_2
km_pp_minfracreassigned_0_3
km_pp_minfracreassigned_0_4
km_pp_minfracreassigned_0_5
km_pp_minfracreassigned_0_6
km_pp_minfracreassigned_0_7

# TestSuite Name : km_pp_ctas
# Test kmeans plusplus with create table as
# Start TestSuite ==========
km_pp_ctas_0_0

# TestSuite Name : km_pp_svec
# Test kmeans plusplus with sparse vector as input
# Start TestSuite ==========
km_pp_svec_0_0

# TestSuite Name : km_pp_int
# Test kmeans plusplus with sparse int as input
# Start TestSuite ==========
km_pp_int_0_0

# TestSuite Name : km_pp_noninfinite
# Test kmeans plusplus with noninfinite as input
# Start TestSuite ==========
km_pp_noninfinite_0_0
km_pp_noninfinite_0_1

# TestSuite Name : km_pp_negative_noninfinite
# Test kmeans plusplus with invalid noninfinite as input
# Start TestSuite ==========
km_pp_negative_noninfinite_0_0
km_pp_negative_noninfinite_0_1

# TestSuite Name : km_pp_negative_maxiter
# Test kmeans plusplus with invalid maximum iteration number
# Start TestSuite ==========
km_pp_negative_maxiter_0_0

# TestSuite Name : km_pp_negative_minfrac
# Test kmeans plusplus with invalid minimum fraction of reassigned centroids
# Start TestSuite ==========
km_pp_negative_minfrac_0_0
km_pp_negative_minfrac_0_1

# TestSuite Name : km_pp_perf_norm1
# Test performance of kmeans plusplus with norm1 distance function
# Start TestSuite ==========
km_pp_perf_norm1_0_0
km_pp_perf_norm1_0_1
km_pp_perf_norm1_0_2
km_pp_perf_norm1_0_3
km_pp_perf_norm1_0_4
km_pp_perf_norm1_0_5
km_pp_perf_norm1_0_6
km_pp_perf_norm1_0_7
km_pp_perf_norm1_0_8
km_pp_perf_norm1_0_9
km_pp_perf_norm1_0_10

# TestSuite Name : km_pp_perf_norm2
# Test performance of kmeans plusplus with norm2 distance function
# Start TestSuite ==========
km_pp_perf_norm2_0_0
km_pp_perf_norm2_0_1
km_pp_perf_norm2_0_2
km_pp_perf_norm2_0_3
km_pp_perf_norm2_0_4
km_pp_perf_norm2_0_5
km_pp_perf_norm2_0_6
km_pp_perf_norm2_0_7
km_pp_perf_norm2_0_8
km_pp_perf_norm2_0_9
km_pp_perf_norm2_0_10

# TestSuite Name : km_pp_perf_angle
# Test performance of kmeans plusplus with angle distance function
# Start TestSuite ==========
km_pp_perf_angle_0_0
km_pp_perf_angle_0_1
km_pp_perf_angle_0_2
km_pp_perf_angle_0_3
km_pp_perf_angle_0_4
km_pp_perf_angle_0_5
km_pp_perf_angle_0_6
km_pp_perf_angle_0_7
km_pp_perf_angle_0_8
km_pp_perf_angle_0_9
km_pp_perf_angle_0_10

# TestSuite Name : km_pp_perf_tanimoto
# Test performance of kmeans plusplus with tanimoto distance function
# Start TestSuite ==========
km_pp_perf_tanimoto_0_0
km_pp_perf_tanimoto_0_1
km_pp_perf_tanimoto_0_2
km_pp_perf_tanimoto_0_3
km_pp_perf_tanimoto_0_4
km_pp_perf_tanimoto_0_5
km_pp_perf_tanimoto_0_6
km_pp_perf_tanimoto_0_7
km_pp_perf_tanimoto_0_8
km_pp_perf_tanimoto_0_9
km_pp_perf_tanimoto_0_10

# TestSuite Name : km_random_default_1abalone
# Test kmeans random with default fn_dist, agg_centroid, max_num_iterations and min_frac_reassigned
# Start TestSuite ==========
km_random_default_1abalone_0_0

# TestSuite Name : km_random_default_2movementlibras
# Test kmeans random with default fn_dist, agg_centroid, max_num_iterations and min_frac_reassigned
# Start TestSuite ==========
km_random_default_2movementlibras_0_0

# TestSuite Name : km_random_default_3uscensus1990
# Test kmeans random with default fn_dist, agg_centroid, max_num_iterations and min_frac_reassigned
# Start TestSuite ==========
km_random_default_3uscensus1990_0_0

# TestSuite Name : km_random_default_4watertreatment
# Test kmeans random with default fn_dist, agg_centroid, max_num_iterations and min_frac_reassigned
# Start TestSuite ==========
km_random_default_4watertreatment_0_0

# TestSuite Name : km_random_default_5wine
# Test kmeans random with default fn_dist, agg_centroid, max_num_iterations and min_frac_reassigned
# Start TestSuite ==========
km_random_default_5wine_0_0

# TestSuite Name : km_random_default_6winequalityred
# Test kmeans random with default fn_dist, agg_centroid, max_num_iterations and min_frac_reassigned
# Start TestSuite ==========
km_random_default_6winequalityred_0_0

# TestSuite Name : km_random_k
# Test kmeans random with different k
# Start TestSuite ==========
km_random_k_0_0
km_random_k_0_1
km_random_k_0_2
km_random_k_0_3
km_random_k_0_4
km_random_k_0_5

# TestSuite Name : km_random_fndist_1distnorm1
# Test kmeans random with different fn_dist
# Start TestSuite ==========
km_random_fndist_1distnorm1_0_0

# TestSuite Name : km_random_fndist_2distangle
# Test kmeans random with different fn_dist
# Start TestSuite ==========
km_random_fndist_2distangle_0_0

# TestSuite Name : km_random_fndist_3disttanimoto
# Test kmeans random with different fn_dist
# Start TestSuite ==========
km_random_fndist_3disttanimoto_0_0

# TestSuite Name : km_random_fndist_4distuserdefined
# Test kmeans random with different fn_dist
# Start TestSuite ==========
km_random_fndist_4distuserdefined_0_0

# TestSuite Name : km_random_aggcentroid_normalizedavg
# Test kmeans random with different agg_centroid
# Start TestSuite ==========
km_random_aggcentroid_normalizedavg_0_0

# TestSuite Name : km_random_aggcentroid_userdefined
# Test kmeans random with user defined agg_centroid
# Start TestSuite ==========
km_random_aggcentroid_userdefined_0_0

# TestSuite Name : km_random_maxnumiterations
# Test kmeans random with different max_num_iterations
# Start TestSuite ==========
km_random_maxnumiterations_0_0
km_random_maxnumiterations_0_1
km_random_maxnumiterations_0_2
km_random_maxnumiterations_0_3
km_random_maxnumiterations_0_4

# TestSuite Name : km_random_minfracreassigned
# Test kmeans random with different min_frac_reassigned
# Start TestSuite ==========
km_random_minfracreassigned_0_0
km_random_minfracreassigned_0_1
km_random_minfracreassigned_0_2
km_random_minfracreassigned_0_3
km_random_minfracreassigned_0_4
km_random_minfracreassigned_0_5
km_random_minfracreassigned_0_6
km_random_minfracreassigned_0_7

# TestSuite Name : km_random_ctas
# Test kmeans random with create table as
# Start TestSuite ==========
km_random_ctas_0_0

# TestSuite Name : km_random_svec
# Test kmeans random with sparse vector as input
# Start TestSuite ==========
km_random_svec_0_0

# TestSuite Name : km_random_int
# Test kmeans random with int as input
# Start TestSuite ==========
km_random_int_0_0

# TestSuite Name : km_random_noninfinite
# Test kmeans random with noninfinite as input
# Start TestSuite ==========
km_random_noninfinite_0_0
km_random_noninfinite_0_1

# TestSuite Name : km_random_negative_noninfinite
# Test kmeans random with invalid noninfinite as input
# Start TestSuite ==========
km_random_negative_noninfinite_0_0
km_random_negative_noninfinite_0_1

# TestSuite Name : km_random_negative_maxiter
# Test kmeans random with invalid maximum iteration number
# Start TestSuite ==========
km_random_negative_maxiter_0_0

# TestSuite Name : km_random_negative_minfrac
# Test kmeans random with invalid minimum fraction of reassigned centroids
# Start TestSuite ==========
km_random_negative_minfrac_0_0
km_random_negative_minfrac_0_1

# TestSuite Name : km_random_perf_norm1
# Test performance of kmeans random with norm1 distance function
# Start TestSuite ==========
km_random_perf_norm1_0_0
km_random_perf_norm1_0_1
km_random_perf_norm1_0_2
km_random_perf_norm1_0_3
km_random_perf_norm1_0_4
km_random_perf_norm1_0_5
km_random_perf_norm1_0_6
km_random_perf_norm1_0_7
km_random_perf_norm1_0_8
km_random_perf_norm1_0_9
km_random_perf_norm1_0_10

# TestSuite Name : km_random_perf_norm2
# Test performance of kmeans random with norm2 distance function
# Start TestSuite ==========
km_random_perf_norm2_0_0
km_random_perf_norm2_0_1
km_random_perf_norm2_0_2
km_random_perf_norm2_0_3
km_random_perf_norm2_0_4
km_random_perf_norm2_0_5
km_random_perf_norm2_0_6
km_random_perf_norm2_0_7
km_random_perf_norm2_0_8
km_random_perf_norm2_0_9
km_random_perf_norm2_0_10

# TestSuite Name : km_random_perf_angle
# Test performance of kmeans random with angle distance function
# Start TestSuite ==========
km_random_perf_angle_0_0
km_random_perf_angle_0_1
km_random_perf_angle_0_2
km_random_perf_angle_0_3
km_random_perf_angle_0_4
km_random_perf_angle_0_5
km_random_perf_angle_0_6
km_random_perf_angle_0_7
km_random_perf_angle_0_8
km_random_perf_angle_0_9
km_random_perf_angle_0_10

# TestSuite Name : km_random_perf_tanimoto
# Test performance of kmeans random with tanimoto distance function
# Start TestSuite ==========
km_random_perf_tanimoto_0_0
km_random_perf_tanimoto_0_1
km_random_perf_tanimoto_0_2
km_random_perf_tanimoto_0_3
km_random_perf_tanimoto_0_4
km_random_perf_tanimoto_0_5
km_random_perf_tanimoto_0_6
km_random_perf_tanimoto_0_7
km_random_perf_tanimoto_0_8
km_random_perf_tanimoto_0_9
km_random_perf_tanimoto_0_10

